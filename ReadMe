Dekoratörler (decorators), Python'da fonksiyonları veya sınıfları değiştirmek veya genişletmek için kullanılan özel işlevlerdir. Bir dekoratör, bir işlevi (veya sınıfı) alır, onu değiştirir veya genişletir ve değiştirilmiş veya genişletilmiş işlevi döndürür.

Dekoratörler, Python'da nesne tabanlı programlama ve metaprogramlama için önemli bir araçtır. İşlevlerin veya sınıfların doğrudan değiştirilmesi yerine, dekoratörler aracılığıyla işlevlerin veya sınıfların davranışları değiştirilebilir veya genişletilebilir.

Dekoratörler, @ işareti ile başlayan bir isimlendirme biçimine sahiptir. Örneğin, "@my_decorator" şeklinde bir dekoratör tanımlanabilir. Dekoratörler, işlevler veya sınıflar için farklı amaçlar için kullanılabilir, örneğin önbelleğe alma, hata ayıklama, günlükleme, zamanlama vb. gibi işlevler ekleyebilirler.

Özetle, dekoratörler, Python'da kodu daha okunaklı, esnek ve genişletilebilir hale getiren güçlü bir araçtır.

Başlıca Pytest dekoratörleri aşağıdaki gibidir:

    @pytest.fixture: Bu dekoratör, test fonksiyonları tarafından kullanılmak üzere önceden ayarlanmış bir öğe (örneğin, bir veritabanı bağlantısı veya test verileri) oluşturur.

    @pytest.mark.parametrize: Bu dekoratör, test işlevlerini farklı argüman kombinasyonları ile çalıştırmak için kullanılır.

            @pytest.mark.parametrize(argnames, argvalues): Bu dekoratör, argnames argümanı ile belirtilen argüman isimleri ve argvalues argümanı ile belirtilen argüman değerleri listesi kullanılarak parametreleri test etmek için kullanılır.

            @pytest.mark.parametrize("arg", [val1, val2, ...]): Bu dekoratör, bir argümanın farklı değerlerinin kullanılarak test edilmesini sağlar.

    @pytest.mark.skip: Bu dekoratör, bir testi atlamak için kullanılır.

    @pytest.mark.xfail: Bu dekoratör, bir testin bilerek başarısız olması durumunda kullanılır.

    @pytest.mark.usefixtures: Bu dekoratör, bir test işlevinin çalışması için gerekli olan bir veya daha fazla araç setini belirler.

    @pytest.mark.timeout: Bu dekoratör, bir test işlevinin belirli bir süre içinde tamamlanması gerektiğini belirtir.

    @pytest.mark.filterwarnings: Bu dekoratör, belirli bir testin çalıştırması sırasında Python hatalarını filtrelemek veya kontrol etmek için kullanılır.

